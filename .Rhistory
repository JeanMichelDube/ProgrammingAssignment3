setwd("C:/Users/Jean-Michel/Desktop/Data Science/ProgrammingAssignment3")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
state=MD
state = "MD"
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
data <- read.csv("outcome-of-care-measures.csv")
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
View(selectState)
state = "TX"
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
View(selectState)
best("TX","heart failure")
outcome = "heart failure"
data <- read.csv("outcome-of-care-measures.csv")
## Check that state and outcome are valid
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
if (outcome == "heart attack"){o=11} else if (outcome == "heart failure") {o=17} else if (outcome == "pneumonia") {o=23} else {stop("invalid outcome")}
## Return hospital name in that state with lowest 30-day death rate
#selectState <- data[data$State == state, ]
m <- min(as.numeric(selectState[,o]), na.rm = TRUE)
s <- subset(selectState,as.vector(selectState[,o])==m,Hospital.Name)
sort(s$Hospital.Name)
as.character(s[1,1])
data <- read.csv("outcome-of-care-measures.csv")
## Check that state and outcome are valid
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
if (outcome == "heart attack"){o=11} else if (outcome == "heart failure") {o=17} else if (outcome == "pneumonia") {o=23} else {stop("invalid outcome")}
## Return hospital name in that state with lowest 30-day death rate
#selectState <- data[data$State == state, ]
m <- min(as.numeric(selectState[,o]), na.rm = TRUE)
m <- min(as.vector(selectState[,o]), na.rm = TRUE)
m <- min(as.factor(selectState[,o]), na.rm = TRUE)
m <- min(as.matrix(selectState[,o]), na.rm = TRUE)
m <- min(as.data.frame(selectState[,o]), na.rm = TRUE)
m <- min(as.double(selectState[,o]), na.rm = TRUE)
m <- min(as.vector.factor(selectState[,o]), na.rm = TRUE)
m <- min(as.numeric_version(selectState[,o]), na.rm = TRUE)
m <- min(as.list(selectState[,o]), na.rm = TRUE)
m <- min(as.list.numeric_version(selectState[,o]), na.rm = TRUE)
m <- min(as.list.numeric(selectState[,o]), na.rm = TRUE)
m <- min(as.list.num(selectState[,o]), na.rm = TRUE)
m <- min(as.numeric(as.list(selectState[,o])), na.rm = TRUE)
as.list(selectState[,o])
x=as.list(selectState[,o])
x=as.list(selectState[o,])
m <- min(as.numeric(as.list(selectState[o,])), na.rm = TRUE)
n <- subset(selectState,select.State[,o])
n <- subset(selectState,selectState[,o])
n <- as.list(selectState[,o])
n <- as.numeric(selectState[,o])
min(n)
View(selectState)
class(n)
c=1.7
class(c)
c=c(21.3,8)
c
min(c)
n
data <- read.csv("outcome-of-care-measures.csv")
## Check that state and outcome are valid
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
if (outcome == "heart attack"){o=11} else if (outcome == "heart failure") {o=17} else if (outcome == "pneumonia") {o=23} else {stop("invalid outcome")}
## Return hospital name in that state with lowest 30-day death rate
#selectState <- data[data$State == state, ]
selectSate <- as.numeric(selectState[,o])
m <- min(as.vector(selectState), na.rm = TRUE)
m <- min(as.vector(selectState[,o]), na.rm = TRUE)
s <- subset(selectState,as.vector(selectState[,o])==m,Hospital.Name)
sort(s$Hospital.Name)
as.character(s[1,1])
class(selecState[,o])
class(selectState)
selectSateNum <- as.numeric(selectState[,o])
m <- min(as.vector(selectStateNum[,o]), na.rm = TRUE)
m <- min(selectStateNum[,o], na.rm = TRUE)
m <- min(selectStateNum, na.rm = TRUE)
selectStateNum <- as.numeric(selectState[,o])
m <- min(selectStateNum, na.rm = TRUE)
m <- min(as.vector(selectStateNum), na.rm = TRUE)
selectState[,o]
selectStateNum
selectStateNum <- as.list(selectState[,o])
selectStateNum
m <- min(as.vector(selectState[,o]), na.rm = TRUE)
m <- min(selectState[,o], na.rm = TRUE)
View(selectState)
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
if (outcome == "heart attack"){o=11} else if (outcome == "heart failure") {o=17} else if (outcome == "pneumonia") {o=23} else {stop("invalid outcome")}
## Return hospital name in that state with lowest 30-day death rate
#selectState <- data[data$State == state, ]
m <- min(as.numeric(selectState[,o]), na.rm = TRUE)
s <- subset(selectState,as.vector(selectState[,o])==m,Hospital.Name)
sort(s$Hospital.Name)
as.character(s[1,1])
}
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
state="TX"
outcome="heart attack"
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
if (outcome == "heart attack"){o=11} else if (outcome == "heart failure") {o=17} else if (outcome == "pneumonia") {o=23} else {stop("invalid outcome")}
## Return hospital name in that state with lowest 30-day death rate
#selectState <- data[data$State == state, ]
m <- min(as.numeric(selectState[,o]), na.rm = TRUE)
s <- subset(selectState,as.vector(selectState[,o])==m,Hospital.Name)
m <- min(as.numeric(selectState[,o]))
as.numeric(selectState[,o])
m <- min(as.vector(as.numeric(selectState[,o], na.rm = TRUE)))
m <- sort(selectState[,o], na.rm = TRUE)
m <- sort(selectState[,o])
View(selectState)
s <- subset(selectState,as.vector(selectState[,o])==m[1,1],Hospital.Name)
s <- subset(selectState,as.vector(selectState[,o])==m[1],Hospital.Name)
View(s)
sort(s$Hospital.Name)
as.character(s[1,1])
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
state = "TX"
outcome = "heart failure"
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
if (outcome == "heart attack"){o=11} else if (outcome == "heart failure") {o=17} else if (outcome == "pneumonia") {o=23} else {stop("invalid outcome")}
## Return hospital name in that state with lowest 30-day death rate
#selectState <- data[data$State == state, ]
m <- sort(as.numeric(selectState[,o]))
s <- subset(selectState,as.vector(selectState[,o])==m[1],Hospital.Name)
sort(s$Hospital.Name)
as.character(s[1,1])
source("best.R")
View(best)
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source("best.R")
best("TX", "heart attack")
state="TX"
outcome="heart attack"
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
if (outcome == "heart attack"){o=11} else if (outcome == "heart failure") {o=17} else if (outcome == "pneumonia") {o=23} else {stop("invalid outcome")}
## Return hospital name in that state with lowest 30-day death rate
#selectState <- data[data$State == state, ]
superSelect=subset(selectState,selectState[,o]>0)
View(superSelect)
superSelect=subset(selectState,is.na(selectState[,o])= FALSE)
superSelect=subset(selectState,is.na(selectState[,o])== FALSE)
superSelect=complete.cases(selectState[,o])
superSelect=selectState[complete.cases(selectState[,o]),]
View(superSelect)
as.numeric(selectState[,o])
superSelect=selectState[complete.cases(selectState[,o]),]
superSelect=subset(selectState,complete.cases(selectState[,o]))
View(superSelect)
superSelect=subset(selectState,complete.cases(selectState[,o]=TRUE))
superSelect=subset(selectState,complete.cases(selectState[,o]==TRUE))
as.numeric(selectState[,o])
superSelect=subset(selectState,complete.cases(selectState[,o]==TRUE))
na.omit(selectState[,o])
na.omit(as.numeric(selectState[,o]))
c=na.omit(as.numeric(selectState[,o]))
m=min(c)
s <- subset(selectState,as.vector(selectState[,o])==m[1],Hospital.Name)
View(s)
s <- subset(selectState,as.numeric(selectState[,o])==m[1],Hospital.Name)
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source("best.R")
best("MD", "pneumonia")
best("MD", "heart attack")
best("TX", "heart failure")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("rankhospital.R")
rankhospital("NY","heart attack",2)
source("rankhospital.R")
rankhospital("NY","heart attack",2)
source("rankhospital.R")
rankhospital("NY","heart attack",2)
source("rankhospital.R")
rankhospital("NY","heart attack",2)
source("rankhospital.R")
rankhospital("NY","heart attack",2)
state="NY"
outcome = "heart attack"
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
if (outcome == "heart attack"){o=11} else if (outcome == "heart failure") {o=17} else if (outcome == "pneumonia") {o=23} else {stop("invalid outcome")}
as.numeric(selectState[,o])
d = order (selectState[,o])
d
d = selectState[order (selectState[,o]),]
d
View(d)
num=2
out = d[num,$State]
out = d[num,7]
out
out = d[num,2]
out
e=subset(selectState,is.na(selectState[,o]==0))
View(e)
e=subset(selectState,is.na(selectState[,o]==FALSE))
View(selectState)
as.numeric(selectState[,o])
e=subset(selectState,is.na(selectState[,o]==FALSE))
is.na(selectState[,o]==FALSE
]
e=subset(selectState,is.na(selectState[,o])==FALSE)
View(e)
as.numeric(selectState[,o])
e=subset(selectState,is.na(selectState[,o])==FALSE)
is.na(selectState[,o])
e=subset(selectState,is.na(as.numeric((selectState[,o])==FALSE)
is.na(as.numeric((selectState[,o])
is.na(as.numeric((selectState[,o])
e=subset(selectState,is.na(as.numeric(selectState[,o])==FALSE)
is.na(as.numeric(selectState[,o]))
e=subset(selectState,is.na(as.numeric(selectState[,o]))==FALSE)
cutNa=subset(selectState,is.na(as.numeric(selectState[,o]))==FALSE)
d = cutNa[order (cutNa[,o]),]
finalTable = cutNa[order (cutNa[,o]),]
## 30-day death rate
out = finalTable[num,2]
out
View(finalTable)
if (num="best") {finalTable[1,2]} else {out = finalTable[num,2]}
if (num=="best") {finalTable[1,2]} else {out = finalTable[num,2]}
if (num=="best") {out=finalTable[1,2]} else {out = finalTable[num,2]}
out
num="best"
if (num=="best") {out=finalTable[1,2]} else {out = finalTable[num,2]}
out
View(finalTable)
num="worst"
if (num=="best") {out=finalTable[1,2]} else if (num=="worst") {out = tail(finalTable)} else {out = finalTable[num,2]}
out
View(out)
if (num=="best") {out=finalTable[1,2]} else if (num=="worst") {out = tail(finalTable,n=1L)} else {out = finalTable[num,2]}
View(out)
if (num=="best") {out=finalTable[1,2]} else if (num=="worst") {out = tail(finalTable,n=1L)[1,2]} else {out = finalTable[num,2]}
out
View(finalTable)
source(rankhospital.R)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
state="TX"
outcome="heart failure"
num=4
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
if (outcome == "heart attack"){o=11} else if (outcome == "heart failure") {o=17} else if (outcome == "pneumonia") {o=23} else {stop("invalid outcome")}
## Return hospital name in that state with the given rank
cutNa=subset(selectState,suppressWarnings(is.na(as.numeric(selectState[,o]))==FALSE))
View(cutNa)
secondTable = cutNa[order (as.character(cutNa[,2]))]
cutNa[,2]
secondTable = cutNa[order (cutNa[,2]),]
View(secondTable)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
state="TX"
outcome="heart failure"
num=4
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
if (is.element(as.character(state),data$State)>0) {selectState <- data[data$State == state, ]} else {stop("invalid state")}
if (outcome == "heart attack"){o=11} else if (outcome == "heart failure") {o=17} else if (outcome == "pneumonia") {o=23} else {stop("invalid outcome")}
## Return hospital name in that state with the given rank
cutNa=subset(selectState,suppressWarnings(is.na(as.numeric(selectState[,o]))==FALSE))
secondTable = cutNa[order (cutNa[,2]),]
finalTable = secondTable[order (secondTable[,o]),]
## 30-day death rate
if (num=="best") {out=finalTable[1,2]} else if (num=="worst") {out = tail(finalTable,n=1L)[1,2]} else {out = finalTable[num,2]}
out
View(finalTable)
View(selectState)
View(secondTable)
finalTable = secondTable[order (as.numeric(secondTable[,o])),]
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
